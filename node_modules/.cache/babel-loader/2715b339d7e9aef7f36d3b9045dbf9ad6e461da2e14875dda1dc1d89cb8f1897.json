{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"src\", \"alt\"];\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"img\", {\n    ref: \"a\",\n    src: _ctx.assets / _ctx.a.webp,\n    alt: $props.alt,\n    class: _normalizeClass({\n      'loading': $data.isLoading\n    })\n  }, null, 10 /* CLASS, PROPS */, _hoisted_1), _createElementVNode(\"img\", {\n    ref: \"b\",\n    src: _ctx.assets / _ctx.b.webp,\n    alt: $props.alt,\n    class: _normalizeClass({\n      'loading': $data.isLoading\n    })\n  }, null, 10 /* CLASS, PROPS */, _hoisted_2), _createElementVNode(\"img\", {\n    ref: \"c\",\n    src: $props.src / _ctx.assets / _ctx.c.webp,\n    alt: $props.alt,\n    class: _normalizeClass({\n      'loading': $data.isLoading\n    })\n  }, null, 10 /* CLASS, PROPS */, _hoisted_3)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","ref","src","_ctx","assets","a","webp","alt","$props","class","_normalizeClass","$data","isLoading","_hoisted_1","b","_hoisted_2","c","_hoisted_3"],"sources":["C:\\Users\\IFPR\\Desktop\\a\\src\\components\\lazyload.vue"],"sourcesContent":["<!-- src/components/LazyImage.vue -->\r\n<template>\r\n    <img ref=\"a\" :src=\"assets/a.webp\" :alt=\"alt\" :class=\"{ 'loading': isLoading }\" />\r\n    <img ref=\"b\" :src=\"assets/b.webp\" :alt=\"alt\" :class=\"{ 'loading': isLoading }\" />\r\n    <img ref=\"c\" :src=\"src/assets/c.webp\" :alt=\"alt\" :class=\"{ 'loading': isLoading }\" />\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'LazyLoad',\r\n    props: {\r\n      src: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      alt: {\r\n        type: String,\r\n        default: ''\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        isLoading: true,\r\n        observer: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.loadImage();\r\n    },\r\n    methods: {\r\n      loadImage() {\r\n        this.observer = new IntersectionObserver((entries) => {\r\n          entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n              const img = entry.target;\r\n              img.src = this.src;\r\n              this.isLoading = false;\r\n              this.observer.unobserve(img);\r\n            }\r\n          });\r\n        });\r\n  \r\n        this.observer.observe(this.$refs.image);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  </style>\r\n  "],"mappings":";mBAAA;mBAAA;mBAAA;;uBAAAA,mBAAA,CAAAC,SAAA,SAEIC,mBAAA,CAAiF;IAA5EC,GAAG,EAAC,GAAG;IAAEC,GAAG,EAAEC,IAAA,CAAAC,MAAM,GAACD,IAAA,CAAAE,CAAC,CAACC,IAAI;IAAGC,GAAG,EAAEC,MAAA,CAAAD,GAAG;IAAGE,KAAK,EAFvDC,eAAA;MAAA,WAEsEC,KAAA,CAAAC;IAAS;kCAF/EC,UAAA,GAGIb,mBAAA,CAAiF;IAA5EC,GAAG,EAAC,GAAG;IAAEC,GAAG,EAAEC,IAAA,CAAAC,MAAM,GAACD,IAAA,CAAAW,CAAC,CAACR,IAAI;IAAGC,GAAG,EAAEC,MAAA,CAAAD,GAAG;IAAGE,KAAK,EAHvDC,eAAA;MAAA,WAGsEC,KAAA,CAAAC;IAAS;kCAH/EG,UAAA,GAIIf,mBAAA,CAAqF;IAAhFC,GAAG,EAAC,GAAG;IAAEC,GAAG,EAAEM,MAAA,CAAAN,GAAG,GAACC,IAAA,CAAAC,MAAM,GAACD,IAAA,CAAAa,CAAC,CAACV,IAAI;IAAGC,GAAG,EAAEC,MAAA,CAAAD,GAAG;IAAGE,KAAK,EAJ3DC,eAAA;MAAA,WAI0EC,KAAA,CAAAC;IAAS;kCAJnFK,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}