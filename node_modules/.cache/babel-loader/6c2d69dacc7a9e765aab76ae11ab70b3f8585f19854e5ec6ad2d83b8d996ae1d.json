{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-960ee52c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\", \"alt\"];\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"img\", {\n    ref: \"a\",\n    src: _ctx.src,\n    alt: _ctx.alt,\n    class: _normalizeClass({\n      'loading': _ctx.isLoading\n    })\n  }, null, 10 /* CLASS, PROPS */, _hoisted_1), _createElementVNode(\"img\", {\n    ref: \"b\",\n    src: _ctx.src,\n    alt: _ctx.alt,\n    class: _normalizeClass({\n      'loading': _ctx.isLoading\n    })\n  }, null, 10 /* CLASS, PROPS */, _hoisted_2), _createElementVNode(\"img\", {\n    ref: \"c\",\n    src: _ctx.src,\n    alt: _ctx.alt,\n    class: _normalizeClass({\n      'loading': _ctx.isLoading\n    })\n  }, null, 10 /* CLASS, PROPS */, _hoisted_3)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","ref","src","_ctx","alt","class","_normalizeClass","isLoading","_hoisted_1","_hoisted_2","_hoisted_3"],"sources":["C:\\Users\\IFPR\\Desktop\\a\\src\\components\\lazyload.vue"],"sourcesContent":["<!-- src/components/LazyImage.vue -->\r\n<template>\r\n    <img ref=\"a\" :src=\"src\" :alt=\"alt\" :class=\"{ 'loading': isLoading }\" />\r\n    <img ref=\"b\" :src=\"src\" :alt=\"alt\" :class=\"{ 'loading': isLoading }\" />\r\n    <img ref=\"c\" :src=\"src\" :alt=\"alt\" :class=\"{ 'loading': isLoading }\" />\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'LazyLoad'\r\n    props: {\r\n      src: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      alt: {\r\n        type: String,\r\n        default: ''\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        isLoading: true,\r\n        observer: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.loadImage();\r\n    },\r\n    methods: {\r\n      loadImage() {\r\n        this.observer = new IntersectionObserver((entries) => {\r\n          entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n              const img = entry.target;\r\n              img.src = this.src;\r\n              this.isLoading = false;\r\n              this.observer.unobserve(img);\r\n            }\r\n          });\r\n        });\r\n  \r\n        this.observer.observe(this.$refs.image);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n/* src/components/LazyImage.vue */\r\n.loading {\r\n  background: url('@/assets/loading-placeholder.png') center center no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n  </style>\r\n  "],"mappings":";;mBAAA;mBAAA;mBAAA;;uBAAAA,mBAAA,CAAAC,SAAA,SAEIC,mBAAA,CAAuE;IAAlEC,GAAG,EAAC,GAAG;IAAEC,GAAG,EAAEC,IAAA,CAAAD,GAAG;IAAGE,GAAG,EAAED,IAAA,CAAAC,GAAG;IAAGC,KAAK,EAF7CC,eAAA;MAAA,WAE4DH,IAAA,CAAAI;IAAS;kCAFrEC,UAAA,GAGIR,mBAAA,CAAuE;IAAlEC,GAAG,EAAC,GAAG;IAAEC,GAAG,EAAEC,IAAA,CAAAD,GAAG;IAAGE,GAAG,EAAED,IAAA,CAAAC,GAAG;IAAGC,KAAK,EAH7CC,eAAA;MAAA,WAG4DH,IAAA,CAAAI;IAAS;kCAHrEE,UAAA,GAIIT,mBAAA,CAAuE;IAAlEC,GAAG,EAAC,GAAG;IAAEC,GAAG,EAAEC,IAAA,CAAAD,GAAG;IAAGE,GAAG,EAAED,IAAA,CAAAC,GAAG;IAAGC,KAAK,EAJ7CC,eAAA;MAAA,WAI4DH,IAAA,CAAAI;IAAS;kCAJrEG,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}